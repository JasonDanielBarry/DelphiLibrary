unit LineClass;

interface

    uses system.sysUtils, Math, GeometryTypes;

    type
        TGeomLine = class
            private
                //member variables
                    point1, point2: TGeomPoint;
                //helper methods
                    //assign points
                        procedure assignPoints(point1In, point2In : TGeomPoint);
                    //calculate projection onto x-axis (x-component)
                        function horizontalProjection() : double;
                    //calculate projection onto y-axis (y-component)
                        function verticalProjection() : double;
                    //acquire unit vector
                        function unitVector() : TGeomVector2D;
            protected
            public
                //constructor
                    constructor create(); overload;
                    constructor create(point1In, point2In : TGeomPoint); overload;
                    constructor create( lengthIn, lineAngelIn   : double;
                                        originPointIn           : TGeomPoint); overload;
                //destructor
                    destructor destroy(); override;
                //accessors
                    function getPoint1() : TGeomPoint;
                    function getPoint2() : TGeomPoint;
                //calculate line length
                    function length() : double;
        end;

implementation

    //private
        //helper methods
            //assign points
                procedure TGeomLine.assignPoints(point1In, point2In : TGeomPoint);
                    begin
                        point1 := point1In;
                        point2 := point2In;
                    end;

            //calculate projection onto x-axis (x-component)
                function TGeomLine.horizontalProjection() : double;
                    begin
                        result := point2.x - point1.x;
                    end;

            //calculate projection onto y-axis (y-component)
                function TGeomLine.verticalProjection() : double;
                    begin
                        result := point2.y - point1.y;
                    end;

            //calculate unit vector
                function TGeomLine.unitVector() : TGeomVector2D;
                    var
                        vector2DOut : TGeomVector2D;
                    begin
                        vector2DOut.horizontalComponent := horizontalProjection() / length();
                        vector2DOut.verticalComponent   := verticalProjection() / length();

                        result := vector2DOut;
                    end;

    //public
        //constructor
            constructor TGeomLine.create();
                begin
                    inherited create();
                end;

            constructor TGeomLine.create(point1In, point2In : TGeomPoint);
                begin
                    create();

                    assignPoints(point1In, point2In);
                end;

            constructor TGeomLine.create(   lengthIn, lineAngelIn   : double;
                                        originPointIn           : TGeomPoint);
                var
                    point1, point2 : TGeomPoint;
                begin
                    //assign second point for line creation
                        point1 := originPointIn;

                        point2.x := point1.x + lengthIn * cos(DegToRad(lineAngelIn));
                        point2.y := point1.y + lengthIn * sin(DegToRad(lineAngelIn));

                    //assign points
                        create(point1, point2);
                end;

        //desturctor
            destructor TGeomLine.destroy();
                begin
                    inherited destroy();
                end;

        //calculate line length
            function TGeomLine.length() : double;
                begin
                    result := hypot(horizontalProjection, verticalProjection);
                end;

        //accessors
            function TGeomLine.getPoint1() : TGeomPoint;
                begin
                    result := point1;
                end;

            function TGeomLine.getPoint2() : TGeomPoint;
                begin
                    result := point2;
                end;
end.
